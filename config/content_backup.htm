<h1>每週心得</h1>
<p>2019 Spring 協同產品設計實習 40423136 的每週心得</p>
<p></p>
<p></p>
<h2>第一週</h2>
<p>第六週才回來補心得，前幾週太混了，連網站都沒有架，好險學弟們幫了我許多，才能讓這個頁面出現，很感激他們。</p>
<p>第一週原本的進度是製作可攜程式，有成功做出。</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/spSVMscxDJI?t=2s" width="560"></iframe></p>
<p></p>
<h2>第二週</h2>
<p>本週開始互評跟自評，但因為還沒開始做自評只打60分左右，希望之後能趕快跟上老師的進度，也跟上整組的進度。</p>
<p></p>
<h2>第三週</h2>
<p>網路的世界真是變化迅速，想當年上課的時候，推送還需要一次一次輸入帳號密碼，沒想到現在居然還能圖形化推送，真是方便許多。</p>
<p><img alt="ãUNGITãçåçæå°çµæ" src="https://raw.githubusercontent.com/Hirse/brackets-ungit/master/images/viewer.png"/></p>
<h2>第四週</h2>
<p>太久沒修嚴家銘老師的課了，還好現在老師都有拍YOUTUBE可以看之前上課拍的影片，讓我可以跟上之前的進度一步一步慢慢學，過程中遇到如proxy的問題，還可以問學弟們~以下是自己的小筆記</p>
<p><img alt="" height="1477" src="/images/82693.jpg" width="1108"/></p>
<h2>第五週</h2>
<p>這週做完可攜系統，與架設完自己的網站</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/SZYYT8QHNHQ?t=359s" width="560"></iframe></p>
<p></p>
<h2>第六週</h2>
<p>這週把網站架好了!也跟小組同步上線了，雖然程度還是趕不上，但是希望我至少不要扯後腿，能夠餐與小組討論的話是再好不過了。</p>
<p>製作個人網站<span>: <a href="https://40423218.github.io/2019wcmj/content/index.html">https://40423136.github.io/2019cp/content/index.html</a></span></p>
<p><span> </span></p>
<p>進度嚴重落後，因為重修生，故沒有個人網站，本周將個人網站架起，並嘗試跟小組網站同步，但不知原因將網站炸開，下星期會請人示範，希望能夠跟得上大家。</p>
<p><span> </span></p>
<p>感謝各位幫助。</p>
<p><span> </span></p>
<p>過程<span>:</span></p>
<p>問題<span>(1) </span>遇到不知名<span>PROXY</span>問題</p>
<p><img alt="" height="513" src="/images/2.png" width="980"/></p>
<p><span> </span></p>
<p><span>CLONE</span>別人的資訊改善網站。</p>
<p>架設好自己網站</p>
<p>最後由同組人員修復成功並加入網站同步</p>
<p><img alt="" height="391" src="/images/擷取.PNG" width="697"/></p>
<h2>第七週</h2>
<p>何謂KMOL?</p>
<p><span>KMOL</span><br/><br/><span>KMOL 是 Knowledge Management &amp; Optimal utilization Lab, 也就是知識管理與最佳化應用實驗室的簡稱, 代表的標誌為</span><a href="https://en.wikipedia.org/wiki/Bactrian_camel">雙峰 Camel</a><span>, 取與 KMOL 讀音相近, 且駱駝的雙峰可以代表 KMOL 所強調的知識與應用, 或者是概念與知識互動轉換的概念.</span><br/><br/></p>
<div class="separator"><a href="https://lab.kmol.info/data/logo/kmol_rotary_570x570.png" imageanchor="1"><img border="0" data-original-height="570" data-original-width="570" height="320" src="https://lab.kmol.info/data/logo/kmol_rotary_570x570.png" width="320"/></a></div>
<div class="separator"></div>
<div class="separator"><a href="https://lab.kmol.info/data/logo/kmol_1172x340_color_3yrs.png" imageanchor="1"><img border="0" data-original-height="232" data-original-width="800" height="92" src="https://lab.kmol.info/data/logo/kmol_1172x340_color_3yrs.png" width="320"/></a></div>
<div class="separator"></div>
<div class="separator">KMOL 中的 K, 代表知識, 根據 <a href="https://en.wikipedia.org/wiki/C-K_theory">https://en.wikipedia.org/wiki/C-K_theory</a> 中的說明, 代表使用者所具備的知識, 可用於解決所面臨的問題, 至於 C-K 設計理論中的 C, 則是概念, 可能是該想法源自已經失效的知識, 或者是目前仍無法用於解決問題的想法, 必須進一步研究補強, 使概念成為知識, 方能解題.</div>
<div class="separator"></div>
<div class="separator">KMOL 創於 2008 年, 當時的駱駝雙峰各自代表知識與應用, 而隨著在 2016 年 C-K Design Theory 的導入, 目前的駱駝雙峰分別代表概念與知識, 隨著對於特定主題的研究投入, 可讓先前只具概念的想法, 逐步化為知識而可用來解題, 反之, 若不積極作為, 持續改進, 先前原本以為可以用於解決特定問題的知識, 隨著時空背景的轉換, 可能早就已經成為無法真正用來解題的概念.</div>
<div class="separator"></div>
<div class="separator">有了以上的認知, 應該就比較能夠體會 KMOL 所強調使用的可攜程式環境系統, 為何必須隨著各工具的改版而不斷進行抽換測試的出發點, 因為在全球協同的現況中, 各產品開發成員都必須時時檢查驗證自己所認為具備的知識庫與概念庫, 那些內容是可以用於解題, 而那些則必須在不同的配置更動下, 才能讓概念轉化為知識而派上用場.</div>
<div class="separator"></div>
<p><span>KMOL 信念</span><br/><br/><span>二十一世紀的科技大學, 在培育具國際觀與在地文化素養, 能適應環境並成功面對挑戰之專業人才. 所謂專業, 即具有專長, 能夠就業之謂. 所謂文化者, 因思考及概念而有之教化. 所謂素養, 即平日的涵養.</span><br/><br/><span>KMOL 除了希望培訓具有國際觀與在地文化素養的專業人才外, 特別鼓勵年輕人仔細閱讀下列兩則引言, 其中對於所謂追求卓越與大學生的職志, 有明確的定義:</span><br/><br/><span>卓越是一種舉止得宜的習慣</span></p>
<blockquote class="tr_bq">Excellence is an art won by training and habituation. We do not act rightly because we have virtue or excellence, but we rather have those because we have acted rightly. We are what we repeatedly do. Excellence, then, is not an act but a habit.<br/>— Aristotle (384 BC – March 7, 322 BC)</blockquote>
<blockquote class="tr_bq">卓越須經由訓練與習慣養成才能獲得。並非具備品德或卓越能讓人舉止得宜，反而是舉止得宜能讓人卓越。經過切身重複實作，才可體會，卓越並非一種作為，而是習慣。<br/>— 亞理士多德 (西元前 384 年 – 西元前 322 年 3 月 7 日)</blockquote>
<p><span>大學生應有的職志</span></p>
<blockquote class="tr_bq">體魄康強, 精神活潑, 舉止端莊, 人格健全, 便是大學生的風度. 不倦的追求真理, 熱烈的愛護國家, 積極的造福人類, 才是大學生的職志.<br/>— 羅家倫 (1928)</blockquote>
<p><br/><span>對於機械設計的認知</span><br/><br/><span>設計是一種明確與具體的表達, 而且是在仔細思考、多方考量後所完成的表達, 表達具有六種形式, 包括口語、文字、2D、3D、數學與實體表達, 設計的結果可以讓執行者有所依循, 根據指示執行後, 可得預期之結果.</span><br/><br/><span>機械則是一種器物, 而且是由固體、流體與軟體元件精巧組合而成, 可互動運作, 達成特定功能之器物.</span><br/><br/><span>因此機械設計就是靈活運用六種表達, 仔細說明如何透過固體、流體與軟體元件之互動運作, 而能達成預定結果之明確與具體表達.</span><br/><br/><span>KMOL 希望您能聰明表達、日日進步</span><br/><br/><span>既然我們認為機械設計是一種表達, 為了讓協同產品開發過程中的表達不至於混亂, 於是導入分散式版次管理的工具, 包括 Git 與 Fossil SCM, 為了能夠善用電腦與網路進行表達, 於是將靜態內容放在 Github Pages 或自行架設的 Nginx 伺服器中, 至於能夠即時更動的動態內容系統則採用雲端 Heroku 或自行架設的 uwsgi 網際環境中.</span><br/><br/><span>為了能夠快速讓產品開發者將概念轉化為數位模擬系統, KMOL 採用 Python 建構軟體雛形, 並設法利用 Cython 技術, 以 C++ 的執行速度進行工程分析.</span><br/><br/><span>為了讓成員有機會一窺各種開源工具的內部設計, KMOL 在 Windows 10 64 位元環境中以 Msys2 編譯 Solvespace、Fossil SCM、V-rep 以及 Range CAE 套件.</span><br/><br/><span>為了讓各學員能夠積極學習不浪費時間, KMOL 鼓勵各學員以 4+1 流程取得碩士.</span></p>
<p><span></span></p>
<h2>第八週</h2>
<p>Vrep- test 1</p>
<p><img alt="" height="784" src="/images/vrep-test1.PNG" width="1496"/></p>
<p></p>
<p>碰撞測試</p>
<p><img alt="" height="851" src="/images/vrep-test1-2.PNG" width="1714"/></p>
<p><a href="http://www.coppeliarobotics.com/helpFiles/en/inverseKinematicsTutorial.htm">參考的PDF</a></p>
<p><a href="https://www.youtube.com/watch?v=DoiiDLpwBcQ&amp;t=694s">參考的影片-課程教授</a></p>
<p></p>
<p></p>
<p></p>
<h1>協同倉儲資訊</h1>
<p>我的倉儲位置:<a href="https://github.com/40423136/2019cp.git">https://github.com/40423136/2019cp.git</a></p>
<p>小組倉儲位置:<a href="https://github.com/mdekmol/cd2019a-task1-2019cda_t1_g2">https://github.com/mdekmol/cd2019a-task1-2019cda_t1_g2</a></p>
<p>小組網站位置:</p>
<p><a href="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g2/content/index.html">https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g2/content/index.html</a></p>
<p></p>
<h1>Virtualbox</h1>
<h2>第10週</h2>
<p><img alt="" height="392" src="/images/虛擬主機.PNG" width="800"/></p>
<p><img alt="" height="395" src="/images/虛擬主機-2.PNG" width="800"/></p>
<h6 class="title style-scope ytd-video-primary-info-renderer"><yt-formatted-string class="style-scope ytd-video-primary-info-renderer" force-default-style="">利用 Virtualbox 建立適合機械協同設計的虛擬主機—操作影片</yt-formatted-string></h6>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/787PgHBeQGE" width="560"></iframe></p>
<p>參考資料：<a href="https://technology.amis.nl/2018/07/27/virtualbox-networking-explained/">https://technology.amis.nl/2018/07/27/virtualbox-networking-explained/</a></p>
<p></p>
<h1>Vrep bubbleRob</h1>
<h2>第11~12週</h2>
<p>參考內容：<a href="http://mde.tw/cd2019/content/BubbleRob1.html">http://mde.tw/cd2019/content/BubbleRob1.html</a></p>
<p>操作影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/LzqWp_eUS8c" width="560"></iframe></p>
<p>檔案位址：<a href="/downloads/bubble-vrep.7z">/downloads/bubble-vrep.7z</a></p>
<p></p>
<h1>Task</h1>
<h2>第十三週</h2>
<p>手足球外觀-最終版</p>
<p></p>
<p><img alt="" height="470" src="/images/手足球(完整).PNG" width="800"/></p>
<p>各個零件需要簡化，不然直接死機......</p>
<h1>Vrep-簡化</h1>
<h2>第14~15週</h2>
<p>簡化目的是要把繁瑣的圖形切割，變成比較簡單的圖形切割，程式在模擬的時候將會變得順暢。</p>
<p></p>
<p>利用V-rep裡面的<strong>Manual mesh division(手動分割網格)來合併圖塊。</strong></p>
<p><img alt="" height="416" src="/images/1.PNG" width="676"/></p>
<p>圖形簡化後變成許多圖塊。</p>
<p><img alt="" height="424" src="/images/2.png" width="678"/></p>
<p>完成之後合併圖塊。</p>
<p><img alt="" height="418" src="/images/3.png" width="678"/></p>
<p></p>
<p>各零件的圖形簡化如上面步驟：</p>
<p>人形-分割</p>
<p><img alt="" height="338" src="/images/4.png" width="680"/></p>
<p>人形-簡化</p>
<p><img alt="" height="348" src="/images/5.png" width="677"/></p>
<p>桿件-分割</p>
<p><img alt="" height="331" src="/images/6.png" width="679"/></p>
<p>桿件-簡化</p>
<p><img alt="" height="335" src="/images/7.png" width="676"/></p>
<p>球台兩側簡化</p>
<p><img alt="" height="394" src="/images/8.png" width="809"/></p>
<p><em>問題：簡化後的圖形無法合成成一整體?!</em></p>
<p>球台修正</p>
<p><img alt="" height="395" src="/images/9.PNG" width="808"/></p>
<p></p>
<h1>Vrep手足球</h1>
<h2>第16週</h2>
<p>電腦對電腦</p>
<p><iframe allowfullscreen="allowfullscreen" height="336" src="//www.youtube.com/embed/lAKskANVLyU" width="600"></iframe></p>
<p>程式碼：</p>
<div class="line number1 index0 alt2"><code class="lua keyword">function</code> <code class="lua plain">sysCall_init() </code></div>
<div class="line number2 index1 alt1"><code class="lua spaces">    </code><code class="lua plain">KickBallV = 10</code></div>
<div class="line number3 index2 alt2"><code class="lua spaces">    </code><code class="lua plain">R_KickBallVel = (</code><code class="lua functions">math.pi</code><code class="lua plain">/180)*KickBallV</code></div>
<div class="line number4 index3 alt1"><code class="lua spaces">    </code><code class="lua plain">B_KickBallVel = -(</code><code class="lua functions">math.pi</code><code class="lua plain">/180)*KickBallV</code></div>
<div class="line number5 index4 alt2"><code class="lua spaces">    </code><code class="lua plain">Sphere_handle=sim.getObjectHandle(</code><code class="lua string">'Sphere'</code><code class="lua plain">)</code></div>
<div class="line number6 index5 alt1"><code class="lua spaces">    </code><code class="lua plain">BRod_handle=sim.getObjectHandle(</code><code class="lua string">'BRod'</code><code class="lua plain">)</code></div>
<div class="line number7 index6 alt2"><code class="lua spaces">    </code><code class="lua plain">BRev_handle=sim.getObjectHandle(</code><code class="lua string">'BRev'</code><code class="lua plain">)</code></div>
<div class="line number8 index7 alt1"><code class="lua spaces">    </code><code class="lua plain">BMo_handle=sim.getObjectHandle(</code><code class="lua string">'BMo'</code><code class="lua plain">)</code></div>
<div class="line number9 index8 alt2"><code class="lua spaces">    </code><code class="lua comments">--</code></div>
<div class="line number10 index9 alt1"><code class="lua spaces">    </code><code class="lua plain">RRod_handle=sim.getObjectHandle(</code><code class="lua string">'RRod'</code><code class="lua plain">)</code></div>
<div class="line number11 index10 alt2"><code class="lua spaces">    </code><code class="lua plain">RRev_handle=sim.getObjectHandle(</code><code class="lua string">'RRev'</code><code class="lua plain">)</code></div>
<div class="line number12 index11 alt1"><code class="lua spaces">    </code><code class="lua plain">RMo_handle=sim.getObjectHandle(</code><code class="lua string">'RMo'</code><code class="lua plain">)</code></div>
<div class="line number13 index12 alt2"><code class="lua keyword">end</code></div>
<div class="line number14 index13 alt1"><code class="lua keyword">function</code> <code class="lua plain">sysCall_actuation()</code></div>
<div class="line number15 index14 alt2"><code class="lua spaces">    </code><code class="lua plain">position_BR=sim.getObjectPosition(BRod_handle,-1)</code></div>
<div class="line number16 index15 alt1"><code class="lua spaces">    </code><code class="lua plain">position_S=sim.getObjectPosition(Sphere_handle,-1)</code></div>
<div class="line number17 index16 alt2"><code class="lua spaces">    </code><code class="lua plain">X =position_S[1] - position_BR[1]</code></div>
<div class="line number18 index17 alt1"><code class="lua spaces">    </code><code class="lua plain">Y =position_S[2] - position_BR[2]</code></div>
<div class="line number19 index18 alt2"><code class="lua spaces">    </code><code class="lua keyword">if</code> <code class="lua plain">1 </code><code class="lua keyword">then</code></div>
<div class="line number20 index19 alt1"><code class="lua spaces">        </code><code class="lua keyword">if</code> <code class="lua plain">X &lt;= 0.02 </code><code class="lua keyword">and</code> <code class="lua plain">Y &lt;= 0 </code><code class="lua keyword">then</code></div>
<div class="line number21 index20 alt2"><code class="lua spaces">            </code><code class="lua plain">sim.setJointTargetVelocity(BRev_handle,B_KickBallVel)</code></div>
<div class="line number22 index21 alt1"><code class="lua spaces">            </code><code class="lua plain">sim.setJointTargetVelocity(BRev_handle,-1)</code></div>
<div class="line number23 index22 alt2"><code class="lua spaces">        </code><code class="lua keyword">elseif</code> <code class="lua plain">X &gt; 0.02 </code><code class="lua keyword">and</code> <code class="lua plain">Y &lt;= 0 </code><code class="lua keyword">then</code></div>
<div class="line number24 index23 alt1"><code class="lua spaces">            </code><code class="lua plain">sim.setJointTargetVelocity(BRev_handle,B_KickBallVel)</code></div>
<div class="line number25 index24 alt2"><code class="lua spaces">            </code><code class="lua plain">sim.setJointTargetVelocity(BRev_handle,1)</code></div>
<div class="line number26 index25 alt1"><code class="lua spaces">        </code><code class="lua keyword">elseif</code> <code class="lua plain">X &lt;= 0.02 </code><code class="lua keyword">and</code> <code class="lua plain">Y &gt; 0 </code><code class="lua keyword">then</code>           </div>
<div class="line number27 index26 alt2"><code class="lua spaces">            </code><code class="lua plain">sim.setJointTargetVelocity(BRev_handle,R_KickBallVel)</code></div>
<div class="line number28 index27 alt1"><code class="lua spaces">            </code><code class="lua plain">sim.setJointTargetVelocity(BRev_handle,-1)        </code></div>
<div class="line number29 index28 alt2"><code class="lua spaces">        </code><code class="lua keyword">elseif</code> <code class="lua plain">X &gt; 0.02 </code><code class="lua keyword">and</code> <code class="lua plain">Y &gt; 0 </code><code class="lua keyword">then</code>           </div>
<div class="line number30 index29 alt1"><code class="lua spaces">            </code><code class="lua plain">sim.setJointTargetVelocity(BRev_handle,R_KickBallVel)    </code></div>
<div class="line number31 index30 alt2"><code class="lua spaces">            </code><code class="lua plain">sim.setJointTargetVelocity(BRev_handle,1)</code></div>
<div class="line number32 index31 alt1"><code class="lua spaces">        </code><code class="lua keyword">end</code></div>
<div class="line number33 index32 alt2"><code class="lua spaces">        </code><code class="lua plain">YYYYY = Y*5</code></div>
<div class="line number34 index33 alt1"><code class="lua spaces">        </code><code class="lua plain">sim.setJointTargetVelocity(BMo_handle,YYYYY)</code></div>
<div class="line number35 index34 alt2"><code class="lua spaces">    </code><code class="lua keyword">end</code></div>
<div class="line number36 index35 alt1"><code class="lua comments">---</code></div>
<div class="line number37 index36 alt2"><code class="lua spaces">    </code><code class="lua plain">position_RR=sim.getObjectPosition(RRod_handle,-1)</code></div>
<div class="line number38 index37 alt1"><code class="lua spaces">    </code><code class="lua plain">X =position_S[1] - position_RR[1]</code></div>
<div class="line number39 index38 alt2"><code class="lua spaces">    </code><code class="lua plain">Y =position_S[2] - position_RR[2]</code></div>
<div class="line number40 index39 alt1"><code class="lua spaces">    </code><code class="lua keyword">if</code> <code class="lua plain">1 </code><code class="lua keyword">then</code></div>
<div class="line number41 index40 alt2"><code class="lua spaces">        </code><code class="lua keyword">if</code> <code class="lua plain">X &lt;= 0.02 </code><code class="lua keyword">and</code> <code class="lua plain">Y &lt;= 0 </code><code class="lua keyword">then</code></div>
<div class="line number42 index41 alt1"><code class="lua spaces">            </code><code class="lua plain">sim.setJointTargetVelocity(RRev_handle,B_KickBallVel)</code></div>
<div class="line number43 index42 alt2"><code class="lua spaces">            </code><code class="lua plain">sim.setJointTargetVelocity(RRev_handle,-1)</code></div>
<div class="line number44 index43 alt1"><code class="lua spaces">        </code><code class="lua keyword">elseif</code> <code class="lua plain">X &gt; 0.02 </code><code class="lua keyword">and</code> <code class="lua plain">Y &lt;= 0 </code><code class="lua keyword">then</code></div>
<div class="line number45 index44 alt2"><code class="lua spaces">            </code><code class="lua plain">sim.setJointTargetVelocity(RRev_handle,B_KickBallVel)</code></div>
<div class="line number46 index45 alt1"><code class="lua spaces">            </code><code class="lua plain">sim.setJointTargetVelocity(RRev_handle,1)</code></div>
<div class="line number47 index46 alt2"><code class="lua spaces">        </code><code class="lua keyword">elseif</code> <code class="lua plain">X &lt;= 0.02 </code><code class="lua keyword">and</code> <code class="lua plain">Y &gt; 0 </code><code class="lua keyword">then</code>           </div>
<div class="line number48 index47 alt1"><code class="lua spaces">            </code><code class="lua plain">sim.setJointTargetVelocity(RRev_handle,R_KickBallVel)</code></div>
<div class="line number49 index48 alt2"><code class="lua spaces">            </code><code class="lua plain">sim.setJointTargetVelocity(RRev_handle,-1)        </code></div>
<div class="line number50 index49 alt1"><code class="lua spaces">        </code><code class="lua keyword">elseif</code> <code class="lua plain">X &gt; 0.02 </code><code class="lua keyword">and</code> <code class="lua plain">Y &gt; 0 </code><code class="lua keyword">then</code>           </div>
<div class="line number51 index50 alt2"><code class="lua spaces">            </code><code class="lua plain">sim.setJointTargetVelocity(RRev_handle,R_KickBallVel)    </code></div>
<div class="line number52 index51 alt1"><code class="lua spaces">            </code><code class="lua plain">sim.setJointTargetVelocity(RRev_handle,1)</code></div>
<div class="line number53 index52 alt2"><code class="lua spaces">        </code><code class="lua keyword">end</code></div>
<div class="line number54 index53 alt1"><code class="lua spaces">        </code><code class="lua plain">YYYYY = Y*5</code></div>
<div class="line number55 index54 alt2"><code class="lua spaces">        </code><code class="lua plain">sim.setJointTargetVelocity(RMo_handle,YYYYY)</code></div>
<div class="line number56 index55 alt1"><code class="lua spaces">    </code><code class="lua keyword">end</code></div>
<div class="line number57 index56 alt2"><code class="lua keyword">end</code></div>
<div class="line number58 index57 alt1"><code class="lua comments">--by 40623130--</code></div>
<div class="line number58 index57 alt1"><code class="lua comments"></code></div>
<div class="line number58 index57 alt1"><a href="/downloads/tfootball.7z">/downloads/tfootball.7z</a></div>
<div class="line number58 index57 alt1"><code class="lua comments"></code></div>
<div class="line number58 index57 alt1"><span>原python code出處(by 40623128):</span></div>
<div class="line number58 index57 alt1"><a href="https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g3_1/content/%E6%89%8B%E8%B6%B3%E7%90%83%E6%89%8B%E6%8E%A7%E8%88%87%E9%9B%BB%E8%85%A6%E5%B0%8D%E6%89%93.html">https://mdekmol.github.io/cd2019a-task1-2019cda_t1_g3_1/content/%E6%89%8B%E8%B6%B3%E7%90%83%E6%89%8B%E6%8E%A7%E8%88%87%E9%9B%BB%E8%85%A6%E5%B0%8D%E6%89%93.html</a><code class="lua comments"></code></div>
<p></p>
<h1>期末任務</h1>
<h3><span>Pinball Machine V-rep Simulator </span></h3>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/XE4qZiN8jMU" width="560"></iframe></span></p>
<p><span>ttt檔案：<a href="https://github.com/40423136/2019cp/blob/master/40423136.ttt">https://github.com/40423136/2019cp/blob/master/40423136.ttt</a></span></p>
<p>按下a鍵左邊揮擊</p>
<p>按下l鍵右邊揮擊</p>
<p>按<a href="https://jingyan.baidu.com/article/ca2d939dd6f0b6eb6c31ce0a.html" ping="/url?sa=t&amp;source=web&amp;rct=j&amp;url=https://jingyan.baidu.com/article/ca2d939dd6f0b6eb6c31ce0a.html&amp;ved=2ahUKEwie2NyAzfriAhUGw4sBHTRpC_sQFjABegQIBBAB"></a>↑會擊球</p>
<p></p>